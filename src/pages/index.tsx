import { type ColumnDef } from "@tanstack/react-table";
import Head from "next/head";
import { useState } from "react";
import { Combobox, type ComboboxOptions } from "~/components/combobox";
import { Button } from "~/components/ui/button";
import { DataTable } from "~/components/ui/data-table";
import { Input } from "~/components/ui/input";

type Level = {
  id: string;
  parentId: string | null;
};

type Item = {
  id: number;
  level1: Level | null;
  level2: Level | null;
  level3: Level | null;
  level4: Level | null;
  level5: Level | null;
  level6: Level | null;
};

const columns: ColumnDef<Item>[] = [
  {
    accessorKey: "id",
    header: "â„–",
  },
  {
    accessorKey: "level1",
    header: "Level 1",
  },
  {
    accessorKey: "level2",
    header: "Level 2",
  },
  {
    accessorKey: "level3",
    header: "Level 3",
  },
  {
    accessorKey: "level4",
    header: "Level 4",
  },
  {
    accessorKey: "level5",
    header: "Level 5",
  },
  {
    accessorKey: "level6",
    header: "Level 6",
  },
];

const data: Item[] = [
  {
    id: 1,
    level1: null,
    level2: null,
    level3: null,
    level4: null,
    level5: null,
    level6: null,
  },
  {
    id: 2,
    level1: null,
    level2: null,
    level3: null,
    level4: null,
    level5: null,
    level6: null,
  },
  {
    id: 3,
    level1: null,
    level2: null,
    level3: null,
    level4: null,
    level5: null,
    level6: null,
  },
  {
    id: 4,
    level1: null,
    level2: null,
    level3: null,
    level4: null,
    level5: null,
    level6: null,
  },
  {
    id: 5,
    level1: null,
    level2: null,
    level3: null,
    level4: null,
    level5: null,
    level6: null,
  },
];

const levels: Level[] = [
  {
    id: "1.1",
    parentId: null,
  },
  {
    id: "1.2",
    parentId: null,
  },
  {
    id: "2.1",
    parentId: "1.1",
  },
  {
    id: "2.2",
    parentId: "1.2",
  },
  {
    id: "3.1",
    parentId: "2.1",
  },
  {
    id: "3.2",
    parentId: "2.2",
  },
  {
    id: "4.1",
    parentId: "3.1",
  },
  {
    id: "4.2",
    parentId: "3.2",
  },
  {
    id: "5.1",
    parentId: "4.1",
  },
  {
    id: "5.2",
    parentId: "4.2",
  },
];

const mapLevelsToComboboxOptions = (levels: Level[]): ComboboxOptions => {
  return levels.reduce((acc, { id, parentId }) => {
    const key = parentId ?? "none";
    if (acc[key]) {
      acc[key]!.push({ id });
    } else {
      acc[key] = [{ id }];
    }
    return acc;
  }, {} as ComboboxOptions);
};

const comboboxOptions = mapLevelsToComboboxOptions(levels);

const makeData = (len: number, startingIndex: number): Item[] => {
  return Array.from(Array(len), (_, i) => ({
    id: startingIndex + i,
    level1: null,
    level2: null,
    level3: null,
    level4: null,
    level5: null,
    level6: null,
  }));
};

export default function Home() {
  const [tableData, setTableData] = useState<Item[]>(data);
  const [rowsCount, setRowsCounts] = useState("");

  const handleRowsCountChange = (
    event: React.ChangeEvent<HTMLInputElement>,
  ) => {
    setRowsCounts(event.target.value.replace(/\D/, ""));
  };

  const handleAddRowsClick = () => {
    const count = Number(rowsCount);
    const lastIndex = tableData[tableData.length - 1]!.id;
    const newRows = makeData(count, lastIndex + 1);
    console.log(`Add ${count} rows`);
    setRowsCounts("");
    setTableData((d) => [...d, ...newRows]);
  };

  const handleSaveClick = () => {
    console.log("Save");
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container flex min-h-screen flex-col items-center justify-center gap-2">
        <DataTable data={tableData} columns={columns} />

        <div className="item-row flex gap-2 self-start">
          <Button variant={"secondary"} onClick={handleAddRowsClick}>
            + Add rows
          </Button>
          <Input
            type="text"
            value={rowsCount}
            onChange={handleRowsCountChange}
            placeholder="Number of rows to add..."
          />
        </div>
        <div className="self-start">
          <Button onClick={handleSaveClick}>Save</Button>
        </div>

        <div className="self-start">
          <p>Combobox demo</p>
          <Combobox options={comboboxOptions} parentId={null} />
        </div>
      </main>
    </>
  );
}
